<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Errors on Programming project 2023-24</title>
    <link>https://unibz-pp-23-24.github.io/docs/errors/</link>
    <description>Recent content in Errors on Programming project 2023-24</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://unibz-pp-23-24.github.io/docs/errors/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Call stack</title>
      <link>https://unibz-pp-23-24.github.io/docs/errors/sections/callstack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://unibz-pp-23-24.github.io/docs/errors/sections/callstack/</guid>
      <description>Call stack # A call stack is a stack that keeps track of the methods that are active during the execution of a program. By &amp;ldquo;active&amp;rdquo;, we mean that an execution of the method has started and has not terminated yet.&#xA;When the execution of a method starts, it is &amp;ldquo;added&amp;rdquo; to the stack. When it terminates, the method is &amp;ldquo;removed&amp;rdquo; from the stack, and control is passed back to the method that called it.</description>
    </item>
    <item>
      <title>Exceptions</title>
      <link>https://unibz-pp-23-24.github.io/docs/errors/sections/exceptions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://unibz-pp-23-24.github.io/docs/errors/sections/exceptions/</guid>
      <description>Exceptions # Programming languages may significantly differ in the way they support errors messages.&#xA;Java relies on a mechanism called exceptions. Several other languages use exceptions, for instance C++, C#, PHP, Python or Ruby. However, the purpose of exceptions may vary from one language to another.&#xA;An exception is an object or data structure that stores information about an exceptional condition encountered during the execution of a program. in Java # In Java, an exception is an object, instance of the native class Exception.</description>
    </item>
    <item>
      <title>Checked vs unchecked</title>
      <link>https://unibz-pp-23-24.github.io/docs/errors/sections/checked/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://unibz-pp-23-24.github.io/docs/errors/sections/checked/</guid>
      <description>Checked vs unchecked # Unchecked exceptions # The simplest type of exception in Java is called an unchecked exception. An unchecked exception is an instances of the native class RuntimeException.&#xA;The class RuntimeException has several native subclasses. You may be familiar wit some of them: NullPointerException, ArrayIndexOutOfBoundsException, IllegalArgumentException, etc.&#xA;An unchecked exception that is not caught is automatically rethrown. Checked exceptions # In Java, an Exception that is not a RuntimeException is a checked exception.</description>
    </item>
    <item>
      <title>Custom exceptions</title>
      <link>https://unibz-pp-23-24.github.io/docs/errors/sections/custom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://unibz-pp-23-24.github.io/docs/errors/sections/custom/</guid>
      <description>Custom exception # Custom exceptions can be created by extending one of Java&amp;rsquo;s native exception types. For instance:&#xA;public class WrongNumberOfRowsException extends IllegalArgumentException { public WrongNumberOfRowsException(int numberOfRows) { super(&amp;#34;This sudoku grid has &amp;#34;+numberOfRows+&amp;#34; rows, whereas it should have 9&amp;#34;). } } A custom exception can be thrown like a regular one:&#xA;if(sudokuGrid.length != 9){ throw new WrongNumberOfRowsException(sudokuGrid.length); } Observation. In this example, WrongNumberOfRowsException extends IllegalArgumentException, which extends RuntimeException. Recall that an instance of a subclass of RuntimeException is unchecked.</description>
    </item>
    <item>
      <title>Java errors</title>
      <link>https://unibz-pp-23-24.github.io/docs/errors/sections/errors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://unibz-pp-23-24.github.io/docs/errors/sections/errors/</guid>
      <description>Java errors # Aside from exceptions, a Java program can throw a so-called Error.&#xA;According to the Javadoc for the class Error:&#xA;An Error [&amp;hellip;] indicates serious problems that a reasonable application should not try to catch. Most such errors are abnormal conditions.&#xA;For instance, some subclasses or Error are OutOfMemoryError and StackOverflowError.</description>
    </item>
  </channel>
</rss>
